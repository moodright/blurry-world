<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moodright.blurryworld.mapper.CommentMapper">
    <resultMap id="commentResultMap" type="Comment">
        <id property="commentId" column="comment_id" />
        <result property="commentPostId" column="comment_post_id" />
        <result property="commentAuthorId" column="comment_author_id" />
        <result property="commentParentId" column="comment_parent_id" />
        <result property="commentCreateTime" column="comment_create_time" />
        <result property="commentStatus" column="comment_status" />
        <result property="commentContent" column="comment_content" />
        <result property="commentLikes" column="comment_likes" />
        <result property="commentDislikes" column="comment_dislikes" />
    </resultMap>

    <resultMap id="childCommentResultMap" type="ChildComment">
        <id property="commentId" column="comment_id" />
        <result property="commentPostId" column="comment_post_id" />
        <result property="commentAuthorId" column="comment_author_id" />
        <result property="commentParentId" column="comment_parent_id" />
        <result property="commentCreateTime" column="comment_create_time" />
        <result property="commentStatus" column="comment_status" />
        <result property="commentContent" column="comment_content" />
        <result property="commentLikes" column="comment_likes" />
        <result property="commentDislikes" column="comment_dislikes" />
        <!-- 字评论类多了相比父评论类三个字段 -->
        <result property="parentCommentAuthorId" column="parent_comment_author_id" />
        <result property="parentCommentAuthorUsername" column="parent_comment_author_username" />
        <result property="parentCommentId" column="parent_comment_id" />
    </resultMap>

    <resultMap id="createCenterCommentResultMap" type="CreateCenterComment">
        <!-- 评论信息 -->
        <association property="comment" javaType="ChildComment" resultMap="childCommentResultMap" />
        <!-- 评论关联的文章信息 -->
        <association property="post" column="comment_post_id" javaType="Post" resultMap="com.moodright.blurryworld.mapper.PostMapper.postResultMap" />
        <!-- 评论关联的用户信息 -->
        <association property="user" column="comment_author_id" javaType="User" resultMap="com.moodright.blurryworld.mapper.UserMapper.userResultMap" />
    </resultMap>

    <!-- 根据用户编号分页查询全部评论 -->
    <select id="queryCreateCenterCommentsByUserId" parameterType="map" resultMap="createCenterCommentResultMap">
            select
                comment_id,
                comment_content,
                comment_create_time,
                comment_parent_id,
                parent_comment_id,
                parent_comment_author_id,
                parent_comment_author_username,
                post_id,
                post_title,
                post_cover,
                user_id,
                username,
                nickname,
                avatar
            from `comment`
            left join `post` on post_id = comment_post_id
            left join `user` on user_id = comment_author_id
            where comment_post_id in (
                select
                    post_id
                from `post`
                where author_id = #{userId}
            )
            and `comment_status` = 0
            limit #{startIndex},#{pageSize}
    </select>

    <select id="queryCreateCenterCommentCountByUserId" parameterType="Integer" resultType="_int">
            select
                count(*)
            from `comment`
            left join `post` on post_id = comment_post_id
            left join `user` on user_id = comment_author_id
            where comment_post_id in (
                select
                    post_id
                from `post`
                where author_id = #{userId}
            )
            and `comment_status` = 0
    </select>

    <select id="queryCreateCenterCommentByCommentId" parameterType="Integer" resultMap="createCenterCommentResultMap">
        select
            comment_id,
            comment_parent_id,
            comment_content,
            comment_create_time,
            user_id,
            username,
            nickname,
            avatar
        from `comment`
        left join `user` on user_id = comment_author_id
        where comment_id = #{commentId} and `comment_status` = 0
    </select>


    <!-- 添加评论 -->
    <insert id="addComment" parameterType="Comment">
        insert into `comment`
        (`comment_post_id`,
         `comment_author_id`,
         `comment_create_time`,
         `comment_content`
        )
        values
        (
         #{commentPostId},
         #{commentAuthorId},
         #{commentCreateTime},
         #{commentContent}
        )
    </insert>

    <!-- 添加子评论 -->
    <insert id="addChildComment" parameterType="ChildComment">
        insert into `comment`
        (`comment_post_id`,
         `comment_author_id`,
         `comment_create_time`,
         `comment_content`,
         `comment_parent_id`,
         `parent_comment_author_id`,
         `parent_comment_author_username`,
         `parent_comment_id`
        )
        values
        (
         #{commentPostId},
         #{commentAuthorId},
         #{commentCreateTime},
         #{commentContent},
         #{commentParentId},
         #{parentCommentAuthorId},
         #{parentCommentAuthorUsername},
         #{parentCommentId}
        )
    </insert>

    <!-- 根据文章编号分页查询评论 -->
    <select id="queryRootCommentsByPostId" parameterType="map" resultMap="commentResultMap">
        select * from `comment`
        where `comment_post_id` = #{postId} and `comment_status` = 0 and ISNULL(`comment_parent_id`)
        <if test="orderByTime != null">
            order by `comment_create_time` desc
        </if>
        limit #{startIndex}, #{pageSize}
    </select>

    <!-- 根据评论编号分页查询子评论 -->
    <select id="queryChildCommentsByCommentId" parameterType="map" resultMap="childCommentResultMap">
        select * from `comment`
        where `comment_parent_id` = #{commentId} and `comment_status` = 0
        limit #{startIndex}, #{pageSize}
    </select>

    <!-- 根据文章编号查询根评论总数 -->
    <select id="queryRootCommentCountsByPostId" parameterType="Integer" resultType="_int">
        select count(*) from `comment`
        where `comment_post_id` = #{postId} and `comment_status` = 0 and ISNULL(`comment_parent_id`)
    </select>

    <!-- 根据文章编号查询全部评论总数 -->
    <select id="queryCommentCountsByPostId" parameterType="Integer" resultType="_int">
        select count(*) from `comment`
        where `comment_post_id` = #{postId} and `comment_status` = 0
    </select>

    <!-- 根据评论编号伪删除根评论 -->
    <update id="deleteRootCommentByCommentId" parameterType="Integer">
        update `comment` set
        `comment_status` = 1
        where `comment_id` = #{commentId} or `comment_parent_id` = #{commentId}
    </update>

    <!-- 根据评论编号伪删除子评论 -->
    <update id="deleteChildCommentByCommentId" parameterType="Integer">
        update `comment` set
        `comment_status` = 1
        where `comment_id` = #{commentId}
    </update>

    <!-- 根据评论编号查询评论 -->
    <select id="queryCommentByCommentId" parameterType="Integer" resultMap="commentResultMap">
        select * from `comment`
        where `comment_id` = #{commentId}
    </select>

</mapper>